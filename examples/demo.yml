#!/usr/bin/env ansible-playbook
---
- hosts: all
  gather_facts: no
  tasks:
    - name: create an initial database
      mysql_db:
        login_host: ::1
        name: ansible-playbook-example
        state: present
      register: dbstatus

    - name: import a database scheme
      mysql_db:
        login_host: ::1
        name: ansible-playbook-example
        state: import
        target: ansible-playbook-example.sql
      # could be done with a handler, but we need the database for subsequent tasks
      when: dbstatus.changed

    - name: update john@example.com's password and role
      mysql_query:
        name: ansible-playbook-example
        table: simple_table
        login_host: ::1
        login_user: root
        login_password: password
        identifiers:
          some_id: 23
          email: 'john@example.com'
        values:
          role: 'superadmin'
          password:
            function: PASSWORD(%s)
            value: 'very_secret'
        defaults:
          department_id: 23 # will not be changed since this is no insert
          last_login: 0

    - name: insert a row
      mysql_query:
        name: ansible-playbook-example
        table: simple_table
        login_host: ::1
        login_user: root
        login_password: password
        identifiers:
          some_id: 23
          email: 'richard@example.com'
        values:
          role: 'ceo'
          password:
            function: PASSWORD(%s)
            value: 'initial_password'
        defaults:
          department_id: 23
          last_login: 100
